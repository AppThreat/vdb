name: Python matrix CI

on: [push]
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
      with:
        repository: AppThreat/vulnerability-db
        path: vulnerability-db
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        cd vulnerability-db && pip install -r requirements.txt
    - name: Install oras
      run: |
        curl -LO https://github.com/oras-project/oras/releases/download/v0.16.0/oras_0.16.0_linux_amd64.tar.gz
        mkdir -p oras-install/
        tar -zxf oras_0.16.0_*.tar.gz -C oras-install/
        mv oras-install/oras /usr/local/bin/
        rm -rf oras_0.16.0_*.tar.gz oras-install/
        oras version
    - name: Build db
      run: |
        mkdir vdb_data
        curl -L https://github.com/aquasecurity/vuln-list/archive/refs/heads/main.zip -o /tmp/main.zip
        cd vulnerability-db && python vdb/cli.py --cache-os
        ls -lh vdb_data
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PYTHONPATH: .
        VDB_HOME: vdb_data
        GITHUB_PAGE_COUNT: 5
        NVD_START_YEAR: 2016
        SCAN_DEBUG_MODE: debug
    - name: Upload db
      run: |
        echo $GITHUB_TOKEN | oras login ghcr.io -u $GITHUB_USERNAME --password-stdin
        oras push ghcr.io/$IMAGE_NAME:v1 ./vdb_data/:application/vnd.ngcloudsec.vdb.layer.v1+tar
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_USERNAME: ${{ github.actor }}
