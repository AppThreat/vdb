name: Build and Upload vdb

on:
  push:
  schedule:
  - cron: "0 */12 * * *"
  workflow_dispatch:
env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  builder:
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v3
    - uses: actions/checkout@v3
      with:
        repository: AppThreat/vulnerability-db
        path: vulnerability-db
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        cd vulnerability-db && pip install -r requirements.txt
    - name: Install oras
      run: |
        curl -LO https://github.com/oras-project/oras/releases/download/v0.16.0/oras_0.16.0_linux_amd64.tar.gz
        mkdir -p oras-install/
        tar -zxf oras_0.16.0_*.tar.gz -C oras-install/
        mv oras-install/oras $GITHUB_WORKSPACE/
        rm -rf oras_0.16.0_*.tar.gz oras-install/
        $GITHUB_WORKSPACE/oras version
    - name: Build and upload db
      run: |
        mkdir vdb_data
        python vulnerability-db/vdb/cli.py --cache-os
        ls -lh vdb_data
        cd vdb_data
        echo $GITHUB_TOKEN | oras login --registry-config $GITHUB_WORKSPACE/.ora_docker/auth.json ghcr.io -u $GITHUB_USERNAME --password-stdin
        $GITHUB_WORKSPACE/oras push ghcr.io/$IMAGE_NAME:v1 \
          --registry-config $GITHUB_WORKSPACE/.ora_docker/auth.json \
          --config ../config.json:application/vnd.oras.config.v1+json \
          --annotation-file ../annotations.json \
          ./data.vdb:application/vnd.ngcloudsec.vdb.layer.v1+tar \
          ./data.index.vdb:application/vnd.ngcloudsec.vdb.layer.v1+tar
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        PYTHONPATH: vulnerability-db
        VDB_HOME: vdb_data
        GITHUB_PAGE_COUNT: 5
        NVD_START_YEAR: 2018
        GITHUB_USERNAME: ${{ github.actor }}
